services:
    BooksDatabase:
        container_name: books_database
        environment:
            MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
            MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
            
            DATABASE: ${DB_NAME}
            MONGO_WRITE_USERNAME: ${MONGO_WRITE_USERNAME} 
            MONGO_WRITE_PASSWORD: ${MONGO_WRITE_PASSWORD}
            MONGO_READ_USERNAME: ${MONGO_READ_USERNAME}
            MONGO_READ_PASSWORD: ${MONGO_READ_PASSWORD}
        user: 999:999
        image: mongo:7.0
        volumes:
            - ./BooksDatabase/mongo.config.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
            - ./BooksDatabase/Data:/data/db
        networks:
            - books_explorer_internal
        ports:
            - "27017:27017"
        healthcheck:
            test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
            interval: 2s
            timeout: 2s
            retries: 10

    DataExtraction:
        container_name: data_extraction
        environment:
            AMOUNT_BOOKS: ${AMOUNT_BOOKS}
            USER_AGENT: ${USER_AGENT}
            MONGO_URI: "mongodb://${MONGO_WRITE_USERNAME}:${MONGO_WRITE_PASSWORD}@BooksDatabase:27017/${DB_NAME}"
            DB_NAME: ${DB_NAME}
        user: "${UID}:${GID}"
        build:
            context: .
            dockerfile: ./Dockerfiles/Dockerfile.DataExtraction
            args:
                UID: ${UID}
                GID: ${GID}
        image: data-extraction
        networks:
            - books_explorer_internal
            - books_explorer_external
        depends_on:
            BooksDatabase:
                condition: service_healthy
        command: python -m DataExtraction

    RecommenderSystem:
        container_name: recommender_system
        environment:
            MONGO_URI: "mongodb://${MONGO_READ_USERNAME}:${MONGO_READ_PASSWORD}@BooksDatabase:27017/${DB_NAME}"
            DB_NAME: ${DB_NAME}
            DEBUG_MODE: ${DEBUG_MODE}
        user: "${UID}:${GID}"
        build:
            context: .
            dockerfile: ./Dockerfiles/Dockerfile.RecommenderSystem
            args:
                UID: ${UID}
                GID: ${GID}
        image: recommend-system
        networks:
            - books_explorer_internal
        ports:
            - "8013:8013"
        depends_on:
            BooksDatabase:
                condition: service_healthy
            DataExtraction:
                condition: service_completed_successfully
        command: sh -c "sleep 10 && python -m RecommenderSystem"

networks:
    books_explorer_internal:
        internal: true
    books_explorer_external: